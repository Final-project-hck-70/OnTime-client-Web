import React, { useState } from "react";
import axios from "axios";
import Cookies from "js-cookie";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import Navbar from "../components/Navbar";
import { useNavigate, redirect } from "react-router-dom";
import logoOntime from "../assets/OnTime-logo.svg";

export default function LoginPage() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const navigate = useNavigate();

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.post("http://localhost:3000/login", {
        email,
        password,
      });
      Cookies.set("token", response.data.token);
      toast.success("Login successful");
      navigate("/");
    } catch (err) {
      console.log(err);
      setError("Invalid email or password");
      toast.error("Invalid email or password");
    }
  };

  return (
    <>
      <main className="flex items-center justify-center h-screen">
        <div className="flex flex-col gap-10 p-4 rounded-md shadow-2xl">
          <div className="flex justify-center">
            <svg
              className="w-28 h-28 "
              version="1.0"
              xmlns="http://www.w3.org/2000/svg"
              width="1024.000000pt"
              height="1024.000000pt"
              viewBox="0 0 1024.000000 1024.000000"
              preserveAspectRatio="xMidYMid meet"
            >
              <g
                transform="translate(0.000000,1024.000000) scale(0.100000,-0.100000)"
                fill="#000000"
                stroke="none"
              >
                <path
                  d="M4987 8359 c-16 -12 -60 -89 -112 -195 -46 -95 -90 -174 -97 -174
-37 0 -289 -42 -392 -65 -414 -93 -860 -308 -1166 -563 -51 -42 -89 -67 -95
-62 -23 19 -130 41 -198 42 -128 2 -236 -37 -331 -118 -183 -157 -219 -440
-81 -640 l36 -51 -60 -119 c-132 -265 -208 -496 -252 -764 -14 -85 -31 -153
-45 -182 -73 -145 -72 -361 0 -507 15 -29 27 -82 35 -146 83 -700 458 -1386
1017 -1861 377 -321 881 -550 1374 -624 52 -8 89 -21 123 -42 135 -86 338 -91
475 -11 109 63 199 189 222 311 54 274 -109 525 -370 572 -136 25 -286 -21
-393 -119 -55 -51 -112 -140 -133 -210 -12 -41 -23 -61 -33 -61 -15 0 -297 93
-368 122 -18 7 -33 17 -33 22 0 6 40 96 89 201 49 104 128 276 176 380 48 105
89 193 91 196 2 4 44 -6 92 -22 202 -64 397 -88 615 -74 l117 7 0 155 c0 144
-1 155 -17 148 -10 -4 -88 -9 -173 -12 -183 -6 -295 9 -458 62 -207 67 -355
158 -518 320 -251 248 -378 533 -391 880 -7 185 11 317 63 465 33 98 50 133
127 269 l30 53 -103 103 c-57 57 -107 102 -112 99 -12 -8 -138 -201 -138 -213
0 -6 -2 -11 -5 -11 -3 0 -106 54 -228 119 -122 65 -269 144 -327 174 -58 31
-105 62 -105 69 0 7 11 31 24 54 22 36 33 43 95 63 81 26 119 50 194 124 95
93 153 258 136 387 l-6 48 70 57 c91 75 230 174 316 225 l68 41 25 -23 c14
-13 67 -72 118 -133 138 -164 120 -155 204 -105 60 36 69 45 61 60 -5 10 -53
79 -106 155 -53 75 -94 138 -92 139 7 7 187 75 240 92 32 10 60 15 63 12 5 -5
175 -673 175 -688 0 -3 -18 -11 -40 -18 -67 -21 -180 -74 -180 -85 0 -5 47
-58 105 -117 l106 -107 97 33 c106 36 246 64 323 64 l49 0 0 148 c0 82 -2 151
-5 153 -5 5 -173 -7 -221 -16 l-32 -5 -60 247 c-94 386 -106 442 -99 449 3 3
42 11 85 17 l79 10 69 -73 c38 -41 94 -97 124 -126 l55 -53 3 110 3 110 -50
63 c-84 105 -85 83 19 326 50 118 94 218 98 222 7 6 31 -46 153 -325 55 -128
55 -134 -22 -222 l-50 -57 2 -109 c1 -73 5 -109 13 -109 6 0 60 53 121 117
l111 117 74 -12 c79 -13 319 -79 334 -93 5 -5 -50 -147 -129 -332 l-139 -323
-65 18 c-92 26 -217 48 -275 48 l-49 0 6 -67 c4 -38 7 -105 7 -149 l0 -82 58
-7 c230 -27 462 -121 662 -269 196 -144 379 -382 470 -611 31 -79 73 -239 85
-327 l6 -48 160 0 c122 0 159 3 159 13 0 50 -26 201 -51 300 -17 65 -29 120
-27 121 1 2 95 51 208 109 113 59 247 129 298 157 l93 50 19 -44 c19 -46 80
-230 80 -244 0 -4 -26 -13 -59 -20 -116 -24 -237 -103 -302 -199 -36 -51 -64
-127 -74 -195 l-7 -48 80 0 80 0 11 44 c22 87 119 183 213 211 73 21 176 19
242 -5 67 -26 153 -105 187 -175 20 -42 24 -65 24 -140 0 -77 -4 -98 -26 -145
-34 -70 -96 -132 -168 -167 -48 -23 -69 -27 -142 -27 -77 0 -93 3 -152 32 -76
37 -145 108 -173 177 l-19 45 -77 0 c-90 0 -88 3 -58 -92 49 -160 189 -282
378 -329 60 -15 61 -18 32 -112 l-20 -64 -203 89 c-111 49 -249 110 -307 135
-58 25 -109 50 -114 54 -6 5 -3 48 7 106 9 54 19 124 23 156 l6 57 -160 0
-160 0 -7 -57 c-3 -32 -9 -68 -12 -80 -4 -18 14 -42 91 -120 130 -133 130
-133 111 -179 -8 -20 -15 -42 -15 -49 0 -7 24 -23 53 -35 168 -71 496 -219
577 -260 124 -63 218 -130 311 -224 l76 -76 26 57 c104 233 171 470 197 693 6
52 22 127 35 165 56 166 51 366 -13 532 -11 26 -22 75 -26 107 -38 335 -238
811 -485 1156 -209 292 -525 590 -831 785 -329 210 -692 341 -1161 419 -35 6
-37 9 -124 187 -95 193 -108 209 -178 209 -19 0 -46 -9 -60 -21z m1137 -1059
c131 -67 261 -151 380 -246 119 -96 226 -195 226 -209 0 -12 -472 -476 -492
-484 -5 -2 -29 15 -51 37 -101 96 -283 224 -409 288 l-67 34 35 77 c20 43 49
107 64 143 29 68 54 124 112 250 19 41 43 96 54 122 10 27 21 48 24 48 3 0 59
-27 124 -60z m-3132 -207 c68 -26 105 -60 138 -126 52 -104 37 -200 -44 -283
-50 -51 -121 -84 -181 -84 -53 0 -125 32 -169 74 -57 56 -78 105 -79 181 -3
176 174 302 335 238z m3969 -513 c69 -94 209 -314 209 -329 0 -4 -21 -17 -47
-30 -55 -26 -322 -169 -462 -247 l-94 -53 -37 62 c-30 51 -85 135 -135 203 -7
10 31 52 155 171 90 87 200 195 244 240 45 44 84 82 87 82 4 1 40 -44 80 -99z
m-3833 -656 c379 -200 384 -203 379 -219 -3 -7 -14 -43 -25 -81 -38 -131 -47
-212 -46 -424 0 -169 4 -223 22 -309 12 -58 21 -105 19 -106 -1 -1 -101 -47
-223 -103 -121 -56 -283 -131 -359 -167 -76 -36 -140 -63 -142 -61 -10 10 -62
203 -65 240 l-3 38 91 35 92 35 -14 51 c-7 29 -18 83 -24 122 -6 38 -13 71
-15 73 -2 3 -26 -15 -54 -40 -56 -50 -110 -70 -192 -70 -181 0 -311 184 -251
354 27 76 65 121 132 155 46 23 67 28 130 28 87 0 122 -15 187 -78 24 -22 44
-39 46 -36 1 2 11 49 20 104 10 55 20 112 23 126 5 25 2 27 -85 59 -50 18 -91
36 -91 40 0 17 72 233 96 286 14 32 30 69 35 82 5 12 11 22 15 22 3 0 139 -70
302 -156z m467 -1416 c21 -40 60 -106 88 -147 41 -61 47 -75 36 -86 -8 -7
-104 -84 -214 -171 -110 -87 -251 -200 -313 -252 -63 -52 -115 -92 -116 -90
-38 60 -122 199 -148 248 -40 73 -104 227 -97 234 8 8 704 335 715 335 6 1 28
-32 49 -71z m301 -429 c46 -49 253 -212 321 -254 l62 -37 -18 -37 c-10 -20
-58 -124 -106 -231 -48 -107 -123 -268 -166 -358 l-79 -163 -47 27 c-27 15
-106 66 -178 113 -107 70 -159 114 -291 246 -88 88 -166 170 -173 182 -11 21
6 36 286 260 163 131 308 248 322 260 14 12 29 22 32 23 3 0 18 -14 35 -31z
m1184 -1160 c85 -21 161 -127 162 -227 3 -209 -231 -324 -398 -197 -108 82
-123 247 -32 350 46 52 81 73 141 84 42 8 61 7 127 -10z"
                />
                <path
                  d="M6090 7100 c-33 -65 -60 -127 -60 -137 0 -11 13 -31 28 -46 28 -27
30 -27 65 -12 20 8 56 15 81 15 87 0 133 -88 90 -171 -16 -31 -66 -59 -105
-59 -33 0 -86 29 -104 57 -10 14 -20 46 -24 72 l-6 46 -50 0 c-47 0 -50 -2
-53 -28 -10 -82 58 -189 143 -228 131 -60 306 30 328 169 21 126 -107 259
-230 239 -18 -3 -33 -3 -33 -1 0 7 59 93 83 120 18 22 18 22 -37 52 l-56 30
-60 -118z"
                />
                <path
                  d="M3779 3773 c-41 -52 -86 -111 -100 -131 -44 -60 -18 -97 79 -110 71
-10 99 -30 108 -79 9 -47 -9 -81 -51 -99 -99 -41 -177 14 -192 137 -8 64 -8
64 -46 73 -30 8 -40 7 -48 -5 -13 -22 -11 -125 5 -163 36 -87 138 -156 231
-156 85 1 156 44 195 120 25 49 25 93 1 145 -23 50 -53 78 -114 105 -26 12
-47 24 -47 28 1 4 18 26 39 49 l38 42 39 -26 c21 -15 59 -43 83 -62 30 -24 46
-32 49 -23 2 7 15 26 29 43 14 16 24 31 22 33 -2 1 -53 38 -114 81 -60 43
-115 82 -121 86 -6 5 -38 -28 -85 -88z"
                />
                <path
                  d="M3871 6667 c-80 -26 -133 -117 -111 -194 5 -21 18 -51 29 -67 10 -15
153 -164 318 -330 544 -548 813 -829 813 -848 0 -17 -14 -18 -274 -18 -282 0
-327 -5 -346 -40 -18 -33 -11 -79 15 -105 l24 -25 413 0 c409 0 414 0 458 23
66 33 103 92 108 171 3 48 0 72 -15 99 -18 36 -269 298 -838 877 -155 157
-314 320 -354 362 -101 106 -148 124 -240 95z"
                />
                <path
                  d="M5820 4865 c-50 -23 -79 -53 -106 -110 l-24 -50 0 -986 c0 -645 4
-1006 11 -1045 63 -358 334 -649 704 -756 70 -20 101 -23 250 -22 156 0 177 2
260 28 280 86 480 253 595 499 76 162 80 194 80 683 0 498 0 495 -84 579 -98
97 -230 101 -321 10 -51 -51 -65 -98 -65 -219 l0 -97 -52 3 -53 3 -5 215 c-6
238 -8 248 -76 314 -91 89 -227 86 -313 -6 -53 -57 -61 -98 -61 -327 0 -284
-21 -353 -139 -472 -76 -76 -173 -129 -242 -132 l-44 -2 -3 61 c-3 61 -3 61
28 67 101 21 205 103 251 201 29 60 29 63 29 240 0 161 -2 184 -21 222 -28 59
-78 100 -145 120 -50 14 -72 14 -126 -2 -17 -5 -18 19 -18 398 0 232 -4 418
-10 437 -13 48 -53 102 -96 131 -47 31 -150 39 -204 15z"
                />
              </g>
            </svg>
          </div>
          <h1 className="text-xl font-bold text-black text-center">
            Welcome back to OnTime
          </h1>
          <form className="m-auto w-96" onSubmit={handleSubmit}>
            {error && <p className="text-red-500">{error}</p>}
            <div className="">
              <label
                htmlFor="email"
                className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
              >
                Your email
              </label>
              <input
                type="email"
                id="email"
                className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder="name@flowbite.com"
                required
                value={email}
                onChange={(e) => setEmail(e.target.value)}
              />
            </div>
            <div className="mb-5">
              <label
                htmlFor="password"
                className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
              >
                Your password
              </label>
              <input
                type="password"
                id="password"
                className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
              />
            </div>
            <div className="flex items-start mb-5">
              <div className="flex items-center h-5">
                <input
                  id="remember"
                  type="checkbox"
                  className="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-blue-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800"
                />
              </div>
              <label
                htmlFor="remember"
                className="ms-2 text-sm font-medium text-gray-900 dark:text-gray-300"
              >
                Remember me
              </label>
            </div>
            <button
              type="submit"
              className="w-full text-white bg-black hover:bg-gray-600 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm  px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
            >
              Log in
            </button>
          </form>
        </div>
        <ToastContainer />
      </main>
    </>
  );
}
